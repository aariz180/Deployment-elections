package com.election.electionsbackend.model.forum;

import com.election.electionsbackend.model.tags.ForumTags;
import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.persistence.*;
import lombok.Getter;
import lombok.Setter;

/**
 * ForumCategory entity representing a category associated with a forum post.
 * It stores references to the related forum and its tags, providing
 * tag-related information through custom getters.
 */
@Entity
@Getter
@Setter
@Table(name = "forum_category")
public class ForumCategory {

    /**
     * The unique identifier for the forum category.
     * It is automatically generated using the IDENTITY strategy.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The forum to which this category belongs.
     *
     * - Mapped by the `forum_id` foreign key.
     * - Uses `@JsonBackReference` to prevent circular references in JSON serialization.
     */
    @JsonBackReference("forum-categories")
    @ManyToOne
    @JoinColumn(name = "forum_id")
    private Forum forum;

    /**
     * The tags associated with this forum category.
     *
     * - Mapped by the `forum_tag_id` foreign key.
     * - Uses `@JsonBackReference` to prevent circular references in JSON serialization.
     */
    @JsonBackReference("forum-tags")
    @ManyToOne
    @JoinColumn(name = "forum_tag_id")
    private ForumTags forumTags;


    /**
     * Retrieves the name of the tag associated with this forum category.
     *
     * @return the name of the tag, or null if the tag or its name is not available.
     */
    @JsonProperty("tagName") // Custom JSON property name for serialization
    public String getTagName() {
        return forumTags != null && forumTags.getTag() != null ? forumTags.getTag().getName() : null;
    }

    /**
     * Retrieves the description of the tag associated with this forum category.
     *
     * @return the description of the tag, or null if the tag or its description is not available.
     */
    @JsonProperty("tagDescription") // Custom JSON property name for serialization
    public String getTagDescription() {
        return forumTags != null && forumTags.getTag() != null ? forumTags.getTag().getDescription() : null;
    }

    // Getters and Setters are automatically generated by Lombok
}
