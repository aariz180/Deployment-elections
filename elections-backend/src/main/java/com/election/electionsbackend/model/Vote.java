package com.election.electionsbackend.model;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import jakarta.persistence.*;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Entity
@Table(name = "votes")
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
@Getter
@Setter
@NoArgsConstructor
public class Vote {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "vote_id")  // Ensure the column name matches exactly in the DB
    private int voteID;

    @ManyToOne(fetch = FetchType.EAGER)  // Use lazy fetching for better performance
    @JoinColumn(name = "regio_code", referencedColumnName = "regio_code")  // Matches DB column name
    private Region region;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "party_id", referencedColumnName = "party_id")  // Matches DB column name
    private Party party;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "candidate_id", referencedColumnName = "candidate_id")  // Matches DB column name
    private Candidate candidate;

    @Column(name = "veld_type")
    private String veldType;

    @Column(name = "waarde")
    private int waarde;

    // Constructors, getters, and setters are generated by Lombok
}
